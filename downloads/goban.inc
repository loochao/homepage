// Go board or go table// Copyright (C) 2003 Nicolas Rougier//// This program is free software; you can redistribute it and/or// modify it under the terms of the GNU Library General Public// License as published by the Free Software Foundation; either// version 2 of the License, or (at your option) any later version.//// This software is distributed in the hope that it will be useful,// but WITHOUT ANY WARRANTY; without even the implied warranty of// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU// Library General Public License for more details.//// You should have received a copy of the GNU Library General Public// License along with this software; if not, write to the// Free Software Foundation, Inc., 59 Temple Place - Suite 330,// Boston, MA 02111-1307, USA.// ---------------------------------------------------------------------------// Persistence of Vision Ray Tracer Scene Description File// File: goban.inc// Vers: 3.5// Desc: Macros for making go board or go table (with traditional feet)// Date: December 2003// Auth: Nicolas Rougier// ---------------------------------------------------------------------------#version 3.5;#include "shapes.inc"#include "kayawoodmap.inc"// ========================================// How to use://  Include this file and define parameters you want to change://   (scale: 1 pov unit = 1 centimeter)//   #declare goban_width            = 42.44;//   #declare goban_length           = 45.45;//   #declare goban_thickness        = 15.14;//   #declare goban_height           = 30.00;//   #declare goban_border           = 1.38;//   #declare goban_border_roundness = 0.2;//   #declare goban_line_width       = 0.15;//   #declare goban_grid_size        = 19;//   #declare goban_hoshi_radius     = 0.35;////   t_goban: goban texture//   t_grid:  grid texture//// Then call://// - go_board() to have a go board centered at origin, lying on floor//    this macro odify goban_height to match goban_thickness//// - go_table() to have a go table centered at origin, lying on floor//// - goban_at(a,b) to get a translation vector at goban coordinates (a,b)//    this macro depends on goban_height so do not forget to set it properly//// ========================================// ========================================//  Textures// ========================================#declare kayawood_grain =  pigment {    wood    warp {      turbulence <0.1,0.05,0.1>      octaves 4      lambda 3      omega 0.3    }    scale 0.175  }#ifndef (t_goban)  #declare t_goban =  texture {    pigment {      kayawood_grain      color_map {kaya_woodmap}      ramp_wave scale 153    }    translate x*-12    translate y*25    rotate z*-90    finish {specular 1 roughness 0.02}  }#end#ifndef (t_grid)  #declare t_grid =     texture {       pigment {rgb 0}       finish {}     }#end// ========================================//  Dimensions://  -----------//   Goban settings from "Making a goban and stones, bowls"//    from http://www.igoweb.org/~pahle/go-stuff/goban.html// ========================================//    Dimensions                  SI (mm)   Imperial (inch)   Japanese//     - Goban width               424.4    16 23/32          1.5 shaku//     - Goban length              454.5    17 29/32          1.4 shaku//     - Goban thickness           151.5     5 31/32          0.5 shaku//     - Line spacing width-wise    22.0        7/8           7.26 bu//     - Line spacing length-wise   23.7       15/16          7.82 bu//     - Line thickness              1.0       >1/32          0.30 bu//     - Hoshi marker diameter       4.0        5/32          0.12 bu//     - Stones diameter            22.5       29/32          7.50 bu// //                            (1 inch=25.4 mm. 1 shaku= 100 bu =303 mm)// ========================================#ifndef (goban_width)  #declare goban_width            = 42.44;#end#ifndef (goban_length)  #declare goban_length           = 45.45;#end#ifndef (goban_thickness)  #declare goban_thickness        = 15.14;#end#ifndef (goban_height)  #declare goban_height           = 30.00;#end#ifndef (goban_border)  #declare goban_border           = 1.38;#end#ifndef (goban_border_roundness)  #declare goban_border_roundness = 0.1;#end#ifndef (goban_line_width)  #declare goban_line_width       = 0.2;#end#ifndef (goban_grid_size)  #declare goban_grid_size        = 19;#end#ifndef (goban_hoshi_radius)  #declare goban_hoshi_radius     = 0.4;#end// ========================================//  Macro to get coordinates of a point at (a,b)// ========================================#macro goban_at(a,b)  #local grid_step_x = (goban_length-2*goban_border)/(goban_grid_size-1);  #local grid_step_z = (goban_width-2*goban_border)/(goban_grid_size-1);  <-goban_length/2+goban_border + a*grid_step_x,  goban_height,   -goban_width/2+goban_border + b*grid_step_z>#end // macro goban_at (a,b)// ========================================//  Macro for hoshi// ========================================#macro hoshi(a,b)  sphere {<0,0,0>, goban_hoshi_radius          scale <1,goban_hoshi_radius/goban_line_width,1>          translate goban_at(a,b)}#end // macro hoshi (a,b)// ========================================//  Macro for goban// ========================================#macro goban ()  #local grid_step_x = (goban_length-2*goban_border)/(goban_grid_size-1);  #local grid_step_z = (goban_width -2*goban_border)/(goban_grid_size-1);  difference {    // Goban (a rounded box)    object {      Round_Box_Union (<-goban_length/2, 0,               -goban_width/2>,                       < goban_length/2, goban_thickness,  goban_width/2>,                       goban_border_roundness)       texture {t_goban}    }    // Grid & hoshis    union {      // Grid      #declare i=0;      #while (i<goban_grid_size)         cylinder {<goban_length/2-goban_border-i*grid_step_x, goban_thickness, -goban_width/2+goban_border-goban_line_width/2>,                   <goban_length/2-goban_border-i*grid_step_x, goban_thickness,  goban_width/2-goban_border+goban_line_width/2>,                    goban_line_width/2                 }         cylinder {<-goban_length/2+goban_border-goban_line_width/2, goban_thickness, goban_width/2-goban_border-i*grid_step_z>,                   < goban_length/2-goban_border+goban_line_width/2, goban_thickness, goban_width/2-goban_border-i*grid_step_z>,                     goban_line_width/2                 }        #declare i=i+1;      #end      // Hoshi's      #switch (goban_grid_size)      #case (19)        hoshi ( 3, 3) hoshi ( 3, 9) hoshi ( 3,15)        hoshi ( 9, 3) hoshi ( 9, 9) hoshi ( 9,15)        hoshi (15, 3) hoshi (15, 9) hoshi (15,15)        #break      #case (13)        hoshi (3,3)  hoshi (3,9)        hoshi (6,6)        hoshi (9,3)  hoshi (9,9)        #break      #case (9)        hoshi (2,2)  hoshi (2,6)        hoshi (4,4)        hoshi (6,2)  hoshi (6,6)        #break      #end      texture {t_grid}    }  }#end// ========================================//  A sine sphere// ========================================#declare sine_sphere = isosurface {  function {sqrt( x*x + y*y + z*z ) - .9 + abs(sin( 4*atan2(x, z) )*0.1)}  threshold 0  accuracy 0.01  contained_by {box {<-1,0,-1>, < 1, 1, 1>}}}// ========================================// A sine cylinder// ========================================#declare sine_cylinder = isosurface {  function {sqrt(x*x + z*z) - 0.9 + abs(sin(4*atan2(x, z))*0.1)}  threshold 0  accuracy 0.01  contained_by {box {<-1,0,-1>, < 1, 1, 1>}}}// ========================================//  A go table foot// ========================================#declare go_table_foot = union {  // Upper part  object {sine_cylinder scale <1, .75, 1> translate y*2}  object {sine_sphere scale <1, .75, 1> rotate x*180 translate y*2}  // Middle part          object{sine_cylinder scale <.4,.5,.4> translate y*1}  // Lower part  difference {    object {sine_sphere rotate x*180 translate y*1 }    plane {y,.25}  }  object {sine_sphere scale <1,.25,1> translate y*1}  translate y*-.25  scale 1/2.5    texture {t_goban}}// ========================================//  Macro for go_board// ========================================#macro go_board()goban()#end// ========================================//  Macro for go_table// ========================================#macro go_table()  union {    object {goban() translate <0, goban_height-goban_thickness, 0>}    #local foot_size = goban_height-goban_thickness;    #local dx = goban_length/2-foot_size/2;     #local dy = goban_width/2-foot_size/2;    object{go_table_foot scale foot_size translate<dx,0,dy>}    object{go_table_foot scale foot_size translate<-dx,0,dy>}    object{go_table_foot scale foot_size translate<-dx,0,-dy>}    object{go_table_foot scale foot_size translate<dx,0,-dy>}  }#end// ========================================//  Example use// ========================================/*plane {y,0 pigment {rgb 1}}light_source { <30,40,20> rgb 2.3	       parallel shadowless               point_at <0,0,0>             }camera { location <60,85,80> look_at <0,0,0> angle 35}//go_board()go_table()*/